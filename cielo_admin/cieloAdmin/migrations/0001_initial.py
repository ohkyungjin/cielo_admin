# Generated by Django 5.1.5 on 2025-01-24 12:41

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import imagekit.models.fields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Ceremony",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="예식명")),
                ("description", models.TextField(verbose_name="설명")),
                (
                    "short_description",
                    models.CharField(max_length=200, verbose_name="짧은 설명"),
                ),
                (
                    "image",
                    imagekit.models.fields.ProcessedImageField(
                        upload_to="ceremonies/%Y/%m/", verbose_name="예식 이미지"
                    ),
                ),
                (
                    "base_price",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="기본 가격",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "활성"),
                            ("inactive", "비활성"),
                            ("preparation", "준비중"),
                        ],
                        default="preparation",
                        max_length=20,
                        verbose_name="상태",
                    ),
                ),
                (
                    "display_order",
                    models.PositiveIntegerField(default=0, verbose_name="표시 순서"),
                ),
                (
                    "is_featured",
                    models.BooleanField(default=False, verbose_name="추천 예식"),
                ),
                (
                    "reservation_count",
                    models.PositiveIntegerField(default=0, verbose_name="예약 수"),
                ),
                (
                    "view_count",
                    models.PositiveIntegerField(default=0, verbose_name="조회수"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "예식",
                "verbose_name_plural": "예식 목록",
                "ordering": ["display_order", "-created_at"],
            },
        ),
        migrations.CreateModel(
            name="NotificationTemplate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("reservation_confirm", "예약 확정"),
                            ("status_change", "상태 변경"),
                            ("reminder", "리마인더"),
                            ("payment", "결제 알림"),
                        ],
                        max_length=50,
                        unique=True,
                        verbose_name="템플릿 유형",
                    ),
                ),
                ("title", models.CharField(max_length=200, verbose_name="제목")),
                ("content", models.TextField(verbose_name="내용")),
                (
                    "variables",
                    models.JSONField(default=dict, verbose_name="템플릿 변수"),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="활성화 여부"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "알림 템플릿",
                "verbose_name_plural": "알림 템플릿 목록",
                "ordering": ["type"],
            },
        ),
        migrations.CreateModel(
            name="Role",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=50, unique=True, verbose_name="역할명"),
                ),
                (
                    "permissions",
                    models.JSONField(default=dict, verbose_name="권한 목록"),
                ),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="설명"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "역할",
                "verbose_name_plural": "역할 목록",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "phone",
                    models.CharField(
                        blank=True, max_length=15, null=True, verbose_name="연락처"
                    ),
                ),
                (
                    "profile_image",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="profiles/%Y/%m/",
                        verbose_name="프로필 이미지",
                    ),
                ),
                (
                    "last_password_change",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="마지막 비밀번호 변경일"
                    ),
                ),
                (
                    "login_attempts",
                    models.PositiveIntegerField(
                        default=0, verbose_name="로그인 시도 횟수"
                    ),
                ),
                (
                    "is_locked",
                    models.BooleanField(default=False, verbose_name="계정 잠금 여부"),
                ),
                (
                    "social_provider",
                    models.CharField(
                        blank=True,
                        max_length=20,
                        null=True,
                        verbose_name="소셜 로그인 제공자",
                    ),
                ),
                (
                    "social_id",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="소셜 아이디",
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
                (
                    "role",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="users",
                        to="cieloAdmin.role",
                        verbose_name="역할",
                    ),
                ),
            ],
            options={
                "verbose_name": "사용자",
                "verbose_name_plural": "사용자 목록",
                "ordering": ["-date_joined"],
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="CeremonyOptionGroup",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="옵션 그룹명")),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="설명"),
                ),
                (
                    "is_required",
                    models.BooleanField(default=False, verbose_name="필수 선택"),
                ),
                (
                    "min_choices",
                    models.PositiveIntegerField(default=0, verbose_name="최소 선택 수"),
                ),
                (
                    "max_choices",
                    models.PositiveIntegerField(default=0, verbose_name="최대 선택 수"),
                ),
                (
                    "display_order",
                    models.PositiveIntegerField(default=0, verbose_name="표시 순서"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "ceremony",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="option_groups",
                        to="cieloAdmin.ceremony",
                        verbose_name="예식",
                    ),
                ),
            ],
            options={
                "verbose_name": "예식 옵션 그룹",
                "verbose_name_plural": "예식 옵션 그룹 목록",
                "ordering": ["display_order", "created_at"],
            },
        ),
        migrations.CreateModel(
            name="CeremonyOption",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="옵션명")),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="설명"),
                ),
                (
                    "image",
                    imagekit.models.fields.ProcessedImageField(
                        blank=True,
                        null=True,
                        upload_to="ceremony_options/%Y/%m/",
                        verbose_name="옵션 이미지",
                    ),
                ),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="가격",
                    ),
                ),
                (
                    "is_default",
                    models.BooleanField(default=False, verbose_name="기본 선택"),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="활성화")),
                (
                    "display_order",
                    models.PositiveIntegerField(default=0, verbose_name="표시 순서"),
                ),
                (
                    "stock",
                    models.IntegerField(default=-1, verbose_name="재고 (-1: 무제한)"),
                ),
                (
                    "low_stock_threshold",
                    models.PositiveIntegerField(
                        default=5, verbose_name="부족 재고 기준"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "group",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="options",
                        to="cieloAdmin.ceremonyoptiongroup",
                        verbose_name="옵션 그룹",
                    ),
                ),
            ],
            options={
                "verbose_name": "예식 옵션",
                "verbose_name_plural": "예식 옵션 목록",
                "ordering": ["display_order", "created_at"],
                "unique_together": {("group", "name")},
            },
        ),
        migrations.CreateModel(
            name="DailyRevenue",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField(unique=True, verbose_name="날짜")),
                (
                    "total_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=15,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="총 매출액",
                    ),
                ),
                (
                    "reservation_count",
                    models.PositiveIntegerField(default=0, verbose_name="예약 수"),
                ),
                (
                    "cancellation_count",
                    models.PositiveIntegerField(default=0, verbose_name="취소 수"),
                ),
                (
                    "average_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=15,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="평균 매출액",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "일별 매출",
                "verbose_name_plural": "일별 매출 목록",
                "ordering": ["-date"],
                "indexes": [
                    models.Index(fields=["date"], name="cieloAdmin__date_2fc96a_idx")
                ],
            },
        ),
        migrations.CreateModel(
            name="Discount",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="할인명")),
                (
                    "type",
                    models.CharField(
                        choices=[("percentage", "비율"), ("fixed", "고정금액")],
                        max_length=20,
                        verbose_name="할인유형",
                    ),
                ),
                (
                    "value",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="할인값",
                    ),
                ),
                (
                    "max_discount",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="최대할인금액",
                    ),
                ),
                ("start_date", models.DateTimeField(verbose_name="시작일시")),
                ("end_date", models.DateTimeField(verbose_name="종료일시")),
                (
                    "max_use_count",
                    models.PositiveIntegerField(default=0, verbose_name="최대사용횟수"),
                ),
                (
                    "used_count",
                    models.PositiveIntegerField(default=0, verbose_name="사용횟수"),
                ),
                (
                    "min_order_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="최소주문금액",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="활성화여부"),
                ),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="설명"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "할인",
                "verbose_name_plural": "할인 목록",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["start_date", "end_date"],
                        name="cieloAdmin__start_d_b87ee0_idx",
                    ),
                    models.Index(
                        fields=["is_active"], name="cieloAdmin__is_acti_9b924b_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="Guardian",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="보호자명")),
                (
                    "phone",
                    models.CharField(
                        max_length=13,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="전화번호는 '010-1234-5678' 형식으로 입력해주세요.",
                                regex="^\\d{3}-\\d{3,4}-\\d{4}$",
                            )
                        ],
                        verbose_name="연락처",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, null=True, verbose_name="이메일"
                    ),
                ),
                (
                    "address",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="주소"
                    ),
                ),
                (
                    "address_detail",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="상세주소"
                    ),
                ),
                (
                    "postal_code",
                    models.CharField(
                        blank=True, max_length=5, null=True, verbose_name="우편번호"
                    ),
                ),
                (
                    "marketing_agree",
                    models.BooleanField(default=False, verbose_name="마케팅 수신 동의"),
                ),
                (
                    "marketing_agree_date",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="마케팅 동의일"
                    ),
                ),
                (
                    "total_pets",
                    models.PositiveIntegerField(
                        default=0, verbose_name="총 반려동물 수"
                    ),
                ),
                (
                    "total_reservations",
                    models.PositiveIntegerField(default=0, verbose_name="총 예약 수"),
                ),
                (
                    "last_visit_date",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="마지막 방문일"
                    ),
                ),
                ("memo", models.TextField(blank=True, null=True, verbose_name="메모")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "보호자",
                "verbose_name_plural": "보호자 목록",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(fields=["phone"], name="cieloAdmin__phone_88b15e_idx"),
                    models.Index(fields=["name"], name="cieloAdmin__name_08f45d_idx"),
                ],
            },
        ),
        migrations.CreateModel(
            name="PaymentMethodStatistics",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField(verbose_name="날짜")),
                (
                    "payment_method",
                    models.CharField(
                        choices=[
                            ("card", "신용카드"),
                            ("transfer", "계좌이체"),
                            ("vbank", "가상계좌"),
                            ("cash", "현금"),
                        ],
                        max_length=20,
                        verbose_name="결제수단",
                    ),
                ),
                (
                    "transaction_count",
                    models.PositiveIntegerField(default=0, verbose_name="거래 수"),
                ),
                (
                    "total_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=15,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="총 금액",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "결제수단별 통계",
                "verbose_name_plural": "결제수단별 통계 목록",
                "ordering": ["-date"],
                "indexes": [
                    models.Index(
                        fields=["date", "payment_method"],
                        name="cieloAdmin__date_ba0f48_idx",
                    )
                ],
                "unique_together": {("date", "payment_method")},
            },
        ),
        migrations.CreateModel(
            name="Pet",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="반려동물명")),
                (
                    "species",
                    models.CharField(
                        choices=[
                            ("dog", "강아지"),
                            ("cat", "고양이"),
                            ("bird", "조류"),
                            ("rabbit", "토끼"),
                            ("hamster", "햄스터"),
                            ("other", "기타"),
                        ],
                        max_length=50,
                        verbose_name="종류",
                    ),
                ),
                ("breed", models.CharField(max_length=100, verbose_name="품종")),
                ("age", models.IntegerField(verbose_name="나이")),
                (
                    "gender",
                    models.CharField(
                        choices=[("M", "수컷"), ("F", "암컷")],
                        max_length=1,
                        verbose_name="성별",
                    ),
                ),
                (
                    "weight",
                    models.DecimalField(
                        decimal_places=2, max_digits=5, verbose_name="체중(kg)"
                    ),
                ),
                ("death_date", models.DateTimeField(verbose_name="사망일시")),
                (
                    "death_cause",
                    models.CharField(
                        choices=[
                            ("natural", "자연사"),
                            ("disease", "병사"),
                            ("accident", "사고사"),
                            ("euthanasia", "안락사"),
                            ("other", "기타"),
                        ],
                        max_length=20,
                        verbose_name="사망원인",
                    ),
                ),
                (
                    "death_cause_detail",
                    models.TextField(
                        blank=True, null=True, verbose_name="사망원인 상세"
                    ),
                ),
                (
                    "hospital_name",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="진료병원"
                    ),
                ),
                (
                    "hospital_contact",
                    models.CharField(
                        blank=True, max_length=20, null=True, verbose_name="병원연락처"
                    ),
                ),
                (
                    "registration_number",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="동물등록번호",
                    ),
                ),
                (
                    "chip_number",
                    models.CharField(
                        blank=True, max_length=50, null=True, verbose_name="칩번호"
                    ),
                ),
                (
                    "special_notes",
                    models.TextField(blank=True, null=True, verbose_name="특이사항"),
                ),
                (
                    "visit_path",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="방문경로"
                    ),
                ),
                (
                    "reference_company",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="경유업체"
                    ),
                ),
                (
                    "need_death_certificate",
                    models.BooleanField(
                        default=False, verbose_name="장례확인서 발급여부"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "guardian",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="pets",
                        to="cieloAdmin.guardian",
                        verbose_name="보호자",
                    ),
                ),
            ],
            options={
                "verbose_name": "반려동물",
                "verbose_name_plural": "반려동물 목록",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Reservation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "대기중"),
                            ("confirmed", "확정"),
                            ("in_progress", "진행중"),
                            ("completed", "완료"),
                            ("cancelled", "취소"),
                        ],
                        default="pending",
                        max_length=20,
                        verbose_name="예약상태",
                    ),
                ),
                (
                    "reservation_number",
                    models.CharField(
                        max_length=20, unique=True, verbose_name="예약번호"
                    ),
                ),
                ("reservation_date", models.DateTimeField(verbose_name="예약일시")),
                (
                    "expected_duration",
                    models.DurationField(verbose_name="예상 소요시간"),
                ),
                (
                    "special_requests",
                    models.TextField(
                        blank=True, null=True, verbose_name="특별 요청사항"
                    ),
                ),
                (
                    "base_price",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="기본 가격",
                    ),
                ),
                (
                    "additional_price",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="추가 가격",
                    ),
                ),
                (
                    "discount_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="할인 금액",
                    ),
                ),
                (
                    "total_price",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="총 가격",
                    ),
                ),
                (
                    "payment_status",
                    models.CharField(
                        choices=[
                            ("pending", "결제대기"),
                            ("paid", "결제완료"),
                            ("partial", "부분결제"),
                            ("refunded", "환불"),
                            ("cancelled", "취소"),
                        ],
                        default="pending",
                        max_length=20,
                        verbose_name="결제상태",
                    ),
                ),
                (
                    "payment_method",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("card", "카드"),
                            ("cash", "현금"),
                            ("transfer", "계좌이체"),
                            ("other", "기타"),
                        ],
                        max_length=20,
                        null=True,
                        verbose_name="결제수단",
                    ),
                ),
                (
                    "paid_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="결제금액",
                    ),
                ),
                (
                    "payment_date",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="결제일시"
                    ),
                ),
                ("signature", models.TextField(verbose_name="서명")),
                (
                    "signature_date",
                    models.DateTimeField(auto_now_add=True, verbose_name="서명일시"),
                ),
                (
                    "memo",
                    models.TextField(blank=True, null=True, verbose_name="관리자 메모"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "assigned_staff",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="assigned_reservations",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="담당 직원",
                    ),
                ),
                (
                    "ceremony",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="reservations",
                        to="cieloAdmin.ceremony",
                        verbose_name="예식",
                    ),
                ),
                (
                    "guardian",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="reservations",
                        to="cieloAdmin.guardian",
                        verbose_name="보호자",
                    ),
                ),
                (
                    "pet",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="reservations",
                        to="cieloAdmin.pet",
                        verbose_name="반려동물",
                    ),
                ),
            ],
            options={
                "verbose_name": "예약",
                "verbose_name_plural": "예약 목록",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Payment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "amount",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="결제금액",
                    ),
                ),
                (
                    "method",
                    models.CharField(
                        choices=[
                            ("card", "신용카드"),
                            ("transfer", "계좌이체"),
                            ("vbank", "가상계좌"),
                            ("cash", "현금"),
                        ],
                        max_length=20,
                        verbose_name="결제수단",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "결제대기"),
                            ("paid", "결제완료"),
                            ("cancelled", "취소"),
                            ("refunded", "환불"),
                            ("failed", "실패"),
                        ],
                        default="pending",
                        max_length=20,
                        verbose_name="상태",
                    ),
                ),
                (
                    "transaction_id",
                    models.CharField(
                        max_length=100, unique=True, verbose_name="거래번호"
                    ),
                ),
                (
                    "payment_key",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="결제 키"
                    ),
                ),
                (
                    "paid_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="결제완료시간"
                    ),
                ),
                (
                    "card_company",
                    models.CharField(
                        blank=True, max_length=50, null=True, verbose_name="카드사"
                    ),
                ),
                (
                    "card_number",
                    models.CharField(
                        blank=True, max_length=20, null=True, verbose_name="카드번호"
                    ),
                ),
                (
                    "installment_months",
                    models.PositiveIntegerField(default=0, verbose_name="할부개월"),
                ),
                (
                    "bank_name",
                    models.CharField(
                        blank=True, max_length=50, null=True, verbose_name="은행명"
                    ),
                ),
                (
                    "account_number",
                    models.CharField(
                        blank=True, max_length=50, null=True, verbose_name="계좌번호"
                    ),
                ),
                (
                    "refund_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="환불금액",
                    ),
                ),
                (
                    "refund_reason",
                    models.TextField(blank=True, null=True, verbose_name="환불사유"),
                ),
                (
                    "refunded_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="환불시간"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "reservation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="payments",
                        to="cieloAdmin.reservation",
                        verbose_name="예약",
                    ),
                ),
            ],
            options={
                "verbose_name": "결제",
                "verbose_name_plural": "결제 목록",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ReservationCeremonyOption",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "quantity",
                    models.PositiveIntegerField(default=1, verbose_name="수량"),
                ),
                (
                    "price_at_time",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="선택 당시 가격",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "option",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="reservation_selections",
                        to="cieloAdmin.ceremonyoption",
                        verbose_name="선택된 옵션",
                    ),
                ),
                (
                    "reservation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="selected_options",
                        to="cieloAdmin.reservation",
                        verbose_name="예약",
                    ),
                ),
            ],
            options={
                "verbose_name": "예약 예식 옵션",
                "verbose_name_plural": "예약 예식 옵션 목록",
                "ordering": ["created_at"],
            },
        ),
        migrations.CreateModel(
            name="ReservationDiscount",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "amount",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="할인금액",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "discount",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="reservation_discounts",
                        to="cieloAdmin.discount",
                        verbose_name="할인",
                    ),
                ),
                (
                    "reservation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="applied_discounts",
                        to="cieloAdmin.reservation",
                        verbose_name="예약",
                    ),
                ),
            ],
            options={
                "verbose_name": "적용된 할인",
                "verbose_name_plural": "적용된 할인 목록",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ServiceStatistics",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "period_type",
                    models.CharField(
                        choices=[
                            ("daily", "일별"),
                            ("weekly", "주별"),
                            ("monthly", "월별"),
                        ],
                        max_length=20,
                        verbose_name="기간 유형",
                    ),
                ),
                ("period_start", models.DateTimeField(verbose_name="기간 시작")),
                ("period_end", models.DateTimeField(verbose_name="기간 종료")),
                (
                    "reservation_count",
                    models.PositiveIntegerField(default=0, verbose_name="예약 수"),
                ),
                (
                    "cancellation_count",
                    models.PositiveIntegerField(default=0, verbose_name="취소 수"),
                ),
                (
                    "total_revenue",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=15,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="총 매출액",
                    ),
                ),
                (
                    "average_revenue",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=15,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="평균 매출액",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "ceremony",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="statistics",
                        to="cieloAdmin.ceremony",
                        verbose_name="예식",
                    ),
                ),
            ],
            options={
                "verbose_name": "서비스 통계",
                "verbose_name_plural": "서비스 통계 목록",
                "ordering": ["-period_start"],
            },
        ),
        migrations.CreateModel(
            name="SystemLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "action",
                    models.CharField(
                        choices=[
                            ("create", "생성"),
                            ("update", "수정"),
                            ("delete", "삭제"),
                            ("login", "로그인"),
                            ("logout", "로그아웃"),
                            ("view", "조회"),
                            ("export", "내보내기"),
                        ],
                        max_length=20,
                        verbose_name="작업",
                    ),
                ),
                (
                    "target_model",
                    models.CharField(max_length=100, verbose_name="대상 모델"),
                ),
                ("target_id", models.CharField(max_length=100, verbose_name="대상 ID")),
                ("details", models.JSONField(default=dict, verbose_name="상세 정보")),
                ("ip_address", models.GenericIPAddressField(verbose_name="IP 주소")),
                (
                    "user_agent",
                    models.CharField(max_length=500, verbose_name="User Agent"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="system_logs",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="사용자",
                    ),
                ),
            ],
            options={
                "verbose_name": "시스템 로그",
                "verbose_name_plural": "시스템 로그 목록",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ErrorLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "error_type",
                    models.CharField(max_length=100, verbose_name="에러 유형"),
                ),
                (
                    "severity",
                    models.CharField(
                        choices=[
                            ("critical", "심각"),
                            ("error", "에러"),
                            ("warning", "경고"),
                            ("info", "정보"),
                        ],
                        max_length=20,
                        verbose_name="심각도",
                    ),
                ),
                ("message", models.TextField(verbose_name="에러 메시지")),
                ("stack_trace", models.TextField(verbose_name="스택 트레이스")),
                (
                    "request_data",
                    models.JSONField(default=dict, verbose_name="요청 데이터"),
                ),
                (
                    "ip_address",
                    models.GenericIPAddressField(null=True, verbose_name="IP 주소"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="error_logs",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="사용자",
                    ),
                ),
            ],
            options={
                "verbose_name": "에러 로그",
                "verbose_name_plural": "에러 로그 목록",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["-created_at"], name="cieloAdmin__created_86100e_idx"
                    ),
                    models.Index(
                        fields=["error_type", "severity"],
                        name="cieloAdmin__error_t_dd6431_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="Notification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "channel",
                    models.CharField(
                        choices=[
                            ("email", "이메일"),
                            ("sms", "SMS"),
                            ("kakao", "카카오톡"),
                        ],
                        max_length=20,
                        verbose_name="발송 채널",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "대기"),
                            ("sent", "발송완료"),
                            ("failed", "실패"),
                        ],
                        default="pending",
                        max_length=20,
                        verbose_name="상태",
                    ),
                ),
                ("data", models.JSONField(default=dict, verbose_name="알림 데이터")),
                (
                    "is_read",
                    models.BooleanField(default=False, verbose_name="읽음 여부"),
                ),
                (
                    "error_message",
                    models.TextField(blank=True, null=True, verbose_name="에러 메시지"),
                ),
                (
                    "sent_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="발송 시간"
                    ),
                ),
                (
                    "read_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="읽은 시간"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "recipient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notifications",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="수신자",
                    ),
                ),
                (
                    "template",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="notifications",
                        to="cieloAdmin.notificationtemplate",
                        verbose_name="알림 템플릿",
                    ),
                ),
            ],
            options={
                "verbose_name": "알림",
                "verbose_name_plural": "알림 목록",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["recipient", "-created_at"],
                        name="cieloAdmin__recipie_c4456b_idx",
                    ),
                    models.Index(
                        fields=["status", "channel"],
                        name="cieloAdmin__status_338d64_idx",
                    ),
                ],
            },
        ),
        migrations.AddIndex(
            model_name="pet",
            index=models.Index(
                fields=["guardian", "name"], name="cieloAdmin__guardia_7b8446_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="pet",
            index=models.Index(
                fields=["death_date"], name="cieloAdmin__death_d_9975c6_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="reservation",
            index=models.Index(
                fields=["reservation_number"], name="cieloAdmin__reserva_7c6fb9_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="reservation",
            index=models.Index(
                fields=["reservation_date"], name="cieloAdmin__reserva_4f25f6_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="reservation",
            index=models.Index(fields=["status"], name="cieloAdmin__status_dee0c9_idx"),
        ),
        migrations.AddIndex(
            model_name="reservation",
            index=models.Index(
                fields=["payment_status"], name="cieloAdmin__payment_6844ac_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="payment",
            index=models.Index(
                fields=["reservation", "-created_at"],
                name="cieloAdmin__reserva_35b590_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="payment",
            index=models.Index(
                fields=["transaction_id"], name="cieloAdmin__transac_aa9172_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="payment",
            index=models.Index(
                fields=["status", "method"], name="cieloAdmin__status_3d28c1_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="reservationdiscount",
            unique_together={("reservation", "discount")},
        ),
        migrations.AddIndex(
            model_name="servicestatistics",
            index=models.Index(
                fields=["ceremony", "period_type", "-period_start"],
                name="cieloAdmin__ceremon_4d1bb6_idx",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="servicestatistics",
            unique_together={("ceremony", "period_type", "period_start")},
        ),
        migrations.AddIndex(
            model_name="systemlog",
            index=models.Index(
                fields=["-created_at"], name="cieloAdmin__created_0d346e_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="systemlog",
            index=models.Index(
                fields=["user", "action"], name="cieloAdmin__user_id_e839c3_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="systemlog",
            index=models.Index(
                fields=["target_model", "target_id"],
                name="cieloAdmin__target__25d51b_idx",
            ),
        ),
    ]
